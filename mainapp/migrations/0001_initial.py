# Generated by Django 3.2.4 on 2023-10-27 09:13

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allusers',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('roles', models.TextField(blank=True, default='client', null=True)),
                ('mobileapptoken', models.TextField(blank=True, null=True)),
                ('profilestatus', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AffiliateforbrandDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=100, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
                ('contentimage', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AffiliateforbrandPage',
            fields=[
                ('affiliateforbrandpageid', models.AutoField(primary_key=True, serialize=False)),
                ('bannertitle', models.TextField(blank=True, null=True)),
                ('bannerdescription', models.TextField(blank=True, null=True)),
                ('bannerimage', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AffiliateforinfluencerDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=100, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
                ('contentimage', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AffiliateforinfluencerPage',
            fields=[
                ('affiliateforinfluencerpageid', models.AutoField(primary_key=True, serialize=False)),
                ('bannertitle', models.TextField(blank=True, null=True)),
                ('bannerdescription', models.TextField(blank=True, null=True)),
                ('bannerimage', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Alluserlogs',
            fields=[
                ('alluserlogsid', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.TextField(blank=True, null=True)),
                ('path', models.TextField(blank=True, null=True)),
                ('statuscode', models.TextField(blank=True, null=True)),
                ('statustype', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Banktransfersfrompaymentgateway',
            fields=[
                ('banktransfersfrompaymentgatewayid', models.AutoField(primary_key=True, serialize=False)),
                ('paymentgatewaytype', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('id', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('convertedamt', models.FloatField(blank=True, null=True)),
                ('fees', models.FloatField(blank=True, null=True)),
                ('netamount', models.FloatField(blank=True, null=True)),
                ('convertedcurrency', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blogid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('title_tegs', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('url_structure', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('blog_categories', models.CharField(blank=True, max_length=100, null=True)),
                ('short_discription', models.CharField(blank=True, max_length=300, null=True)),
                ('discription', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('alttext', models.CharField(blank=True, max_length=100, null=True)),
                ('keyword', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('blogcategoryid', models.AutoField(primary_key=True, serialize=False)),
                ('blogcategory', models.TextField()),
                ('blogcategory_count', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BlogsCate',
            fields=[
                ('blogscateid', models.AutoField(primary_key=True, serialize=False)),
                ('blogscategory', models.TextField()),
                ('page_title', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Careerpage',
            fields=[
                ('careerpageid', models.AutoField(primary_key=True, serialize=False)),
                ('bannertitle', models.TextField(blank=True, null=True)),
                ('bannerdescription', models.TextField(blank=True, null=True)),
                ('bannerimage', models.ImageField(upload_to='')),
                ('who_we_are_title', models.TextField(blank=True, null=True)),
                ('who_we_are_description', models.TextField(blank=True, null=True)),
                ('who_we_are_image', models.ImageField(upload_to='')),
                ('what_we_value_title', models.TextField(blank=True, null=True)),
                ('what_we_value_description', models.TextField(blank=True, null=True)),
                ('what_we_value_image', models.ImageField(upload_to='')),
                ('how_we_hire_title', models.TextField(blank=True, null=True)),
                ('how_we_hire_description', models.TextField(blank=True, null=True)),
                ('how_we_hire_image', models.ImageField(upload_to='')),
                ('what_we_do_title', models.TextField(blank=True, null=True)),
                ('what_we_do_description', models.TextField(blank=True, null=True)),
                ('what_we_do_image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Casting_Call',
            fields=[
                ('castingcallid', models.AutoField(primary_key=True, serialize=False)),
                ('brandlogo', models.ImageField(blank=True, null=True, upload_to='')),
                ('brandbanner', models.ImageField(blank=True, null=True, upload_to='')),
                ('productimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('posttitle', models.TextField(blank=True, null=True, unique=True)),
                ('country', models.TextField(blank=True, default='India', null=True)),
                ('allcountry', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('brandname', models.TextField(blank=True, null=True)),
                ('requiredplatform', models.TextField(blank=True, null=True)),
                ('compensation', models.TextField(blank=True, null=True)),
                ('postkeyword', models.TextField(blank=True, null=True)),
                ('postdescription', models.TextField(blank=True, null=True)),
                ('cardcolor', models.TextField(blank=True, null=True)),
                ('approved', models.BooleanField(blank=True, null=True)),
                ('expirydate', models.DateField(blank=True, null=True)),
                ('creationdate', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CastingCallCategories',
            fields=[
                ('castingcallcategorieid', models.AutoField(primary_key=True, serialize=False)),
                ('categoryname', models.TextField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('page_title', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CastingCallPage',
            fields=[
                ('castingcallpageid', models.AutoField(primary_key=True, serialize=False)),
                ('bannertitle', models.TextField(blank=True, null=True)),
                ('bannerdescription', models.TextField(blank=True, null=True)),
                ('bannerimage', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categorieid', models.AutoField(primary_key=True, serialize=False)),
                ('categoryname', models.TextField()),
                ('subcategory', models.TextField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, null=True)),
                ('isapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('approvedby', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('approvaldate', models.DateTimeField(blank=True, null=True)),
                ('page_title', models.TextField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientSettings',
            fields=[
                ('clientsettingsid', models.AutoField(primary_key=True, serialize=False)),
                ('email_verified', models.BooleanField(blank=True, null=True)),
                ('mobile_verified', models.BooleanField(blank=True, null=True)),
                ('twofa_verified', models.BooleanField(blank=True, null=True)),
                ('kyc', models.BooleanField(blank=True, null=True)),
                ('csettingsuserid', models.OneToOneField(blank=True, db_column='csettingsuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyLogo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Partner_Image', models.ImageField(db_index=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(blank=True, db_index=True, default=None, max_length=20, null=True)),
                ('Email', models.CharField(blank=True, db_index=True, default=None, max_length=30, null=True)),
                ('Subject', models.CharField(blank=True, db_index=True, default=None, max_length=50, null=True)),
                ('Message', models.CharField(blank=True, db_index=True, default=None, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Countrytimezone',
            fields=[
                ('countrytimezoneid', models.AutoField(primary_key=True, serialize=False)),
                ('countrycode', models.TextField(blank=True, null=True)),
                ('countryname', models.TextField(blank=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('GMT_offset', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DifferentCategory',
            fields=[
                ('differentcategoryid', models.AutoField(primary_key=True, serialize=False)),
                ('categorylogo', models.ImageField(upload_to='')),
                ('categorytitle', models.TextField(blank=True, null=True)),
                ('logoalttext', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eventid', models.AutoField(primary_key=True, serialize=False)),
                ('eventname', models.TextField(blank=True, null=True)),
                ('eventbookdate', models.DateField(blank=True, null=True)),
                ('starttime', models.TimeField(blank=True, null=True)),
                ('endtime', models.TimeField(blank=True, null=True)),
                ('bookinghours', models.DurationField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('clienttimezone', models.TextField(blank=True, null=True)),
                ('eventorderdate', models.DateField(auto_now=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.clientsettings', to_field='csettingsuserid')),
            ],
        ),
        migrations.CreateModel(
            name='Eventtime',
            fields=[
                ('eventtimeid', models.AutoField(primary_key=True, serialize=False)),
                ('eventtime', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Eventtype',
            fields=[
                ('eventtypeid', models.AutoField(primary_key=True, serialize=False)),
                ('eventtype', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRates',
            fields=[
                ('ratesid', models.AutoField(primary_key=True, serialize=False)),
                ('countery_abbrevation', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('rates', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FaqDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Description', models.CharField(blank=True, db_index=True, default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FooterDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Footer_Quotes', models.CharField(blank=True, db_index=True, default=None, max_length=500, null=True)),
                ('FacebookLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('TwitterLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('InstagramLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('YoutubeLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('LinkedinLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('WhatsappLink', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Emailid', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Phone1', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Phone2', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Address', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('choosemeimage', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Home_Page_Detail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Banner_Title', models.TextField(max_length=200, unique=True)),
                ('Banner_Description', models.TextField(max_length=600, unique=True)),
                ('Banner_Image', models.ImageField(db_index=True, upload_to='')),
                ('Web_Title', models.CharField(max_length=70, unique=True)),
                ('Web_Description', models.TextField(max_length=2000, unique=True)),
                ('Box_Title1', models.CharField(max_length=35, unique=True)),
                ('Box_Title2', models.CharField(max_length=70, unique=True)),
                ('Box_Title3', models.TextField(max_length=400, unique=True)),
                ('Web_Image', models.ImageField(db_index=True, upload_to='')),
                ('Title1', models.CharField(max_length=100, unique=True)),
                ('Description1', models.TextField(unique=True)),
                ('Title2', models.CharField(max_length=100, unique=True)),
                ('Description2', models.TextField(unique=True)),
                ('Title3', models.CharField(max_length=100, unique=True)),
                ('Description3', models.TextField(unique=True)),
                ('Title4', models.CharField(max_length=100, unique=True)),
                ('Description4', models.TextField(unique=True)),
                ('Title5', models.CharField(max_length=100, unique=True)),
                ('Description5', models.TextField(unique=True)),
                ('Title6', models.CharField(max_length=100, unique=True)),
                ('Description6', models.TextField(unique=True)),
                ('Total_Influencer', models.CharField(max_length=20, unique=True)),
                ('Total_Client', models.CharField(max_length=20, unique=True)),
                ('Total_Job_Completed', models.CharField(max_length=20, unique=True)),
                ('Total_Category', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerAnalytics',
            fields=[
                ('analyticsid', models.AutoField(primary_key=True, serialize=False)),
                ('totalorders', models.IntegerField(blank=True, null=True)),
                ('totalrevenues', models.IntegerField(blank=True, null=True)),
                ('monthlyorders', models.IntegerField(blank=True, null=True)),
                ('monthlyrevenues', models.IntegerField(blank=True, null=True)),
                ('quaterlyorders', models.IntegerField(blank=True, null=True)),
                ('quaterlyrevenues', models.IntegerField(blank=True, null=True)),
                ('lastupdated', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerProfile',
            fields=[
                ('influencer_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=1000, null=True)),
                ('desc_title', models.CharField(blank=True, max_length=500, null=True)),
                ('short_description', models.IntegerField(default=1)),
                ('language', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('currency', models.TextField(blank=True, default='inr', null=True)),
                ('chooseme', models.IntegerField(default=1)),
                ('rulesforgig', models.IntegerField(default=1)),
                ('aboutme', models.IntegerField(default=1)),
                ('gender', models.TextField(null=True)),
                ('profileimage', models.ImageField(blank=True, default='default_avtar.webp', null=True, upload_to='Profileimages/')),
                ('profileimage1', models.ImageField(blank=True, default='default_avtar.webp', null=True, upload_to='Profileimages/')),
                ('imagegallery', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('videogallery', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('videolink', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('skills', models.TextField(blank=True, null=True)),
                ('platformdetails', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('rating', models.IntegerField(blank=True, default=5, null=True)),
                ('services', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('events', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('send', models.BooleanField(default=False)),
                ('analyticsid', models.ForeignKey(blank=True, db_column='analyticsid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influenceranalytics')),
                ('influencer_userid', models.OneToOneField(blank=True, db_column='influencer_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerSettings',
            fields=[
                ('influencer_settingsid', models.AutoField(primary_key=True, serialize=False)),
                ('rm_userid', models.IntegerField(blank=True, db_column='rm_userid', default=None, null=True)),
                ('email_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('mobile_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('address_verified', models.BooleanField(blank=True, default=False, null=True)),
                ('twofa_verified', models.BooleanField(blank=True, null=True)),
                ('kyc', models.BooleanField(blank=True, null=True)),
                ('influencer_userid', models.OneToOneField(blank=True, db_column='influencer_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('invoiceid', models.AutoField(primary_key=True, serialize=False)),
                ('invoicedate', models.DateTimeField(blank=True, null=True)),
                ('invoicedamount', models.BigIntegerField()),
                ('taxamount', models.FloatField(blank=True, db_column='Taxamount', null=True)),
                ('taxpercentage', models.FloatField(blank=True, null=True)),
                ('finalamt', models.BigIntegerField(blank=True, db_column='Finalamt', null=True)),
                ('isbrand', models.BooleanField(blank=True, db_column='IsBrand', null=True)),
                ('brandid', models.IntegerField(blank=True, db_column='Brandid', null=True)),
                ('brandgstno', models.TextField(blank=True, db_column='BrandGSTNO', null=True)),
                ('brand_address', models.TextField(blank=True, null=True)),
                ('invoicename', models.TextField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jobhiring',
            fields=[
                ('jobhiringid', models.AutoField(primary_key=True, serialize=False)),
                ('jobtitle', models.TextField(blank=True, null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('joblocation', models.TextField(blank=True, null=True)),
                ('aboutthejob', models.TextField(blank=True, null=True)),
                ('rulesandresponsibilities', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('desiredcandidateprofile', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('languageid', models.AutoField(primary_key=True, serialize=False)),
                ('languages', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoginIP',
            fields=[
                ('LoginIPid', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('IP_Address', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('device', models.TextField(blank=True, null=True)),
                ('sessionkey', models.TextField(blank=True, null=True)),
                ('time', models.TimeField(auto_now=True)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Managerssettings',
            fields=[
                ('msettingsid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('number', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('languagesknown', models.TextField(blank=True, null=True)),
                ('managerid', models.OneToOneField(db_column='managerid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('ordersid', models.AutoField(primary_key=True, serialize=False)),
                ('orderdate', models.DateTimeField(blank=True, null=True)),
                ('rmid', models.IntegerField(blank=True, null=True)),
                ('paymentstatus', models.BooleanField(blank=True, null=True)),
                ('orderamt', models.BigIntegerField(blank=True, null=True)),
                ('plantype', models.TextField(blank=True, null=True)),
                ('orderdescription', models.TextField(blank=True, null=True)),
                ('paymentcurrency', models.TextField(blank=True, null=True)),
                ('exchangerate', models.FloatField(blank=True, null=True)),
                ('convertedamt', models.BigIntegerField(blank=True, null=True)),
                ('taxamt', models.FloatField(blank=True, null=True)),
                ('taxpercentage', models.FloatField(blank=True, null=True)),
                ('finalamt', models.BigIntegerField(blank=True, null=True)),
                ('totaldiscount', models.BigIntegerField(blank=True, null=True)),
                ('finalamtafterdiscount', models.BigIntegerField(blank=True, null=True)),
                ('couponcodeid', models.IntegerField(blank=True, null=True)),
                ('iscouponapplied', models.BooleanField(blank=True, null=True)),
                ('acceptancedate', models.DateTimeField(blank=True, null=True)),
                ('cancelleddate', models.DateTimeField(blank=True, null=True)),
                ('completedate', models.DateTimeField(blank=True, null=True)),
                ('isrmapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('isresponseapprovedbyclient', models.BooleanField(blank=True, default=False, null=True)),
                ('paymentrelease', models.BooleanField(blank=True, default=False, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencerprofile', to_field='influencer_userid')),
            ],
        ),
        migrations.CreateModel(
            name='Orderstatus',
            fields=[
                ('statusid', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.TextField(blank=True, null=True)),
                ('statusdescription', models.TextField(blank=True, db_column='Statusdescription', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageBanner',
            fields=[
                ('PageBannerid', models.AutoField(primary_key=True, serialize=False)),
                ('Loginimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('signupimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('Contactimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('Refundimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('aboutimage', models.ImageField(blank=True, null=True, upload_to='')),
                ('faqimage', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('pageid', models.AutoField(primary_key=True, serialize=False)),
                ('pagename', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('paymentsid', models.AutoField(primary_key=True, serialize=False)),
                ('paymentdate', models.DateTimeField(blank=True, null=True)),
                ('paymentmethod', models.TextField(blank=True, null=True)),
                ('amountpaid', models.IntegerField(blank=True, null=True)),
                ('transactionid', models.TextField(blank=True, null=True)),
                ('is_refunded', models.BooleanField(blank=True, db_column='is refunded', null=True)),
                ('insertiontime', models.DateTimeField(blank=True, db_column='Insertiontime', null=True)),
                ('accountantid', models.ForeignKey(blank=True, db_column='Accountantid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='accountuserid', to=settings.AUTH_USER_MODEL)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('invoiceid', models.ForeignKey(blank=True, db_column='invoiceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.invoices')),
                ('ordersid', models.ForeignKey(blank=True, db_column='ordersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('permissionid', models.AutoField(primary_key=True, serialize=False)),
                ('permission_name', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platforms',
            fields=[
                ('platformid', models.AutoField(primary_key=True, serialize=False)),
                ('platform_name', models.TextField(blank=True, null=True)),
                ('imagepath', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyPolicyDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=150, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
                ('contentimage', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='RefundPolicyDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=100, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rmsettings',
            fields=[
                ('rmsettingsid', models.AutoField(primary_key=True, serialize=False)),
                ('addressverified', models.BooleanField(blank=True, null=True)),
                ('nameverified', models.BooleanField(blank=True, null=True)),
                ('numberverified', models.BooleanField(blank=True, null=True)),
                ('emailverified', models.BooleanField(blank=True, null=True)),
                ('totalorderscompleted', models.IntegerField(blank=True, null=True)),
                ('totalorderspending', models.IntegerField(blank=True, null=True)),
                ('totalorderscancelled', models.IntegerField(blank=True, null=True)),
                ('totalrevenue', models.TextField(blank=True, null=True)),
                ('refundedrevenue', models.TextField(blank=True, null=True)),
                ('managerid', models.ForeignKey(blank=True, db_column='managerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.managerssettings', to_field='managerid')),
                ('rmid', models.OneToOneField(blank=True, db_column='rmid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rulesgig',
            fields=[
                ('rulesid', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('heading', models.TextField(blank=True, null=True)),
                ('subheading', models.TextField(blank=True, null=True)),
                ('subheading1', models.TextField(blank=True, null=True)),
                ('rulesforgig', models.TextField()),
                ('rulesforgig1', models.TextField()),
                ('rulesforgig2', models.TextField()),
                ('rulesforgig3', models.TextField()),
                ('rulesforgig4', models.TextField()),
                ('rulesforgig5', models.TextField(blank=True, null=True)),
                ('rulesforgig6', models.TextField(blank=True, null=True)),
                ('rulesforgig7', models.TextField(blank=True, null=True)),
                ('rulesforgig8', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seo_Content',
            fields=[
                ('seocontentid', models.AutoField(primary_key=True, serialize=False)),
                ('robot', models.TextField(blank=True, null=True)),
                ('google_site_verification', models.TextField(blank=True, null=True)),
                ('twitter_card', models.TextField(blank=True, null=True)),
                ('twitter_site', models.TextField(blank=True, null=True)),
                ('twitter_creator', models.TextField(blank=True, null=True)),
                ('twitter_title', models.TextField(blank=True, null=True)),
                ('twitter_image_url', models.TextField(blank=True, null=True)),
                ('twitter_image_alt', models.TextField(blank=True, null=True)),
                ('twitter_player', models.TextField(blank=True, null=True)),
                ('twitter_player_width', models.TextField(blank=True, null=True)),
                ('twitter_player_height', models.TextField(blank=True, null=True)),
                ('fb_app_id', models.TextField(blank=True, null=True)),
                ('og_title', models.TextField(blank=True, null=True)),
                ('og_url', models.TextField(blank=True, null=True)),
                ('og_img_url', models.TextField(blank=True, null=True)),
                ('og_img_type', models.TextField(blank=True, null=True)),
                ('og_img_width', models.TextField(blank=True, null=True)),
                ('og_img_height', models.TextField(blank=True, null=True)),
                ('og_type', models.TextField(blank=True, null=True)),
                ('og_locale', models.TextField(blank=True, null=True)),
                ('og_image_url', models.TextField(blank=True, null=True)),
                ('og_img_secure_url', models.TextField(blank=True, null=True)),
                ('og_site_name', models.TextField(blank=True, null=True)),
                ('og_see_also', models.TextField(blank=True, null=True)),
                ('aticle_author', models.TextField(blank=True, null=True)),
                ('format_detecation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('serviceid', models.AutoField(primary_key=True, serialize=False)),
                ('servicename', models.TextField(blank=True, null=True)),
                ('service_description', models.TextField(blank=True, null=True)),
                ('subservice', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTax',
            fields=[
                ('servicetaxid', models.AutoField(primary_key=True, serialize=False)),
                ('servicetaxpercent', models.IntegerField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Slots',
            fields=[
                ('slotid', models.AutoField(primary_key=True, serialize=False)),
                ('slottype', models.TextField(blank=True, null=True)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('slotperminprice', models.BigIntegerField(blank=True, null=True)),
                ('slotduration', models.DurationField(blank=True, null=True)),
                ('bookedduration', models.DurationField(blank=True, null=True)),
                ('singleslotduration', models.IntegerField(blank=True, default=20)),
                ('isactive', models.BooleanField(blank=True, default=False, null=True)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptionplans',
            fields=[
                ('planid', models.AutoField(primary_key=True, serialize=False)),
                ('planname', models.TextField(blank=True, null=True)),
                ('planamount', models.BigIntegerField(blank=True, null=True)),
                ('planduration', models.DurationField(blank=True, null=True)),
                ('planperks', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermsofServiceDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(blank=True, db_index=True, default=None, max_length=100, null=True)),
                ('Description', models.TextField(blank=True, db_index=True, default=None, null=True)),
                ('contentimage', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('wishlistid', models.AutoField(primary_key=True, serialize=False)),
                ('addtime', models.DateTimeField(auto_now=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
            ],
        ),
        migrations.CreateModel(
            name='Whychooseme',
            fields=[
                ('whychoosemeid', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('Whychoosetext', models.TextField()),
                ('Whychoosetext1', models.TextField()),
                ('Whychoosetext2', models.TextField()),
                ('Whychoosetext3', models.TextField()),
                ('Whychoosetext4', models.TextField()),
                ('categoryid', models.ForeignKey(blank=True, db_column='categoryid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.categories')),
            ],
        ),
        migrations.CreateModel(
            name='Webhook_Response',
            fields=[
                ('Webhookresponse_id', models.AutoField(primary_key=True, serialize=False)),
                ('paymentstatus', models.BooleanField(default=False)),
                ('amount', models.BigIntegerField(default=0)),
                ('payloadtype', models.TextField(blank=True, null=True)),
                ('currencycode', models.TextField(blank=True, null=True)),
                ('countrycode', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('mode', models.TextField(blank=True, null=True)),
                ('stripepaymentid', models.TextField(blank=True, null=True)),
                ('paymentmethodtype', models.TextField(blank=True, null=True)),
                ('stripeapistatus', models.BooleanField(blank=True, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
            ],
        ),
        migrations.CreateModel(
            name='VideosLink',
            fields=[
                ('videosLinkid', models.AutoField(primary_key=True, serialize=False)),
                ('videosLink', models.TextField(blank=True, null=True)),
                ('videolinkpurpose', models.TextField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='')),
                ('date', models.DateTimeField(auto_now=True)),
                ('vl_userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('videosid', models.AutoField(primary_key=True, serialize=False)),
                ('videosname', models.CharField(blank=True, max_length=2000, null=True)),
                ('videospath', models.FileField(upload_to='')),
                ('videopurpose', models.IntegerField(blank=True, null=True)),
                ('purpose', models.CharField(blank=True, max_length=2000, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('vd_userid', models.ForeignKey(blank=True, db_column='vd_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Userpermissions',
            fields=[
                ('userpermissionid', models.AutoField(primary_key=True, serialize=False)),
                ('permissionid', models.ForeignKey(blank=True, db_column='permissionid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.permissions')),
                ('userid', models.OneToOneField(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('documentsid', models.AutoField(primary_key=True, serialize=False)),
                ('documentname', models.TextField(blank=True, null=True)),
                ('documentpath', models.FileField(upload_to='accounts/')),
                ('dockyc', models.BooleanField(default=False)),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Useraccounts',
            fields=[
                ('accountsid', models.AutoField(primary_key=True, serialize=False)),
                ('bankname', models.TextField(blank=True, null=True)),
                ('currencycode', models.TextField(blank=True, null=True)),
                ('account_name', models.TextField(blank=True, null=True)),
                ('accountnumber', models.TextField(blank=True, null=True)),
                ('ifsc_codes', models.TextField(blank=True, null=True)),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnverifedAgencyDetails',
            fields=[
                ('unverifedagencydetailsid', models.AutoField(primary_key=True, serialize=False)),
                ('comapanyname', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('itrcertficate', models.FileField(blank=True, null=True, upload_to='agencydocs/')),
                ('gstcertificate', models.FileField(blank=True, null=True, upload_to='agencydocs/')),
                ('verified', models.BooleanField(default=False)),
                ('applied', models.BooleanField(default=False)),
                ('clientid', models.OneToOneField(blank=True, db_column='agency_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Profile_Image', models.ImageField(db_index=True, upload_to='')),
                ('Name', models.CharField(max_length=150)),
                ('Post', models.CharField(max_length=150)),
                ('Message', models.TextField()),
                ('rating', models.IntegerField(default=0)),
                ('testimonails_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('approveuserid', models.ForeignKey(blank=True, db_column='approveuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Templates',
            fields=[
                ('templatesid', models.AutoField(primary_key=True, serialize=False)),
                ('templatetext', models.TextField(blank=True, null=True)),
                ('templatename', models.TextField(blank=True, null=True)),
                ('templatetype', models.TextField(choices=[('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('wedding', 'Wedding'), ('motivation', 'Motivation'), ('others', 'Others')])),
                ('date', models.DateField(auto_now=True)),
                ('userid', models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subslots',
            fields=[
                ('subslotid', models.AutoField(primary_key=True, serialize=False)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('slotprice', models.BigIntegerField(blank=True, null=True)),
                ('slotduration', models.DurationField(blank=True, null=True)),
                ('recordingrequired', models.BooleanField(blank=True, null=True)),
                ('isbooked', models.BooleanField(blank=True, default=False, null=True)),
                ('recordingprice', models.BigIntegerField(blank=True, default=10, null=True)),
                ('slotlink', models.TextField(blank=True, null=True)),
                ('isreferenced', models.BooleanField(blank=True, null=True)),
                ('clientuserid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.clientsettings', to_field='csettingsuserid')),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
                ('slotid', models.ForeignKey(blank=True, db_column='slotid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.slots')),
            ],
        ),
        migrations.CreateModel(
            name='Subscribedusers',
            fields=[
                ('subscriptionid', models.AutoField(primary_key=True, serialize=False)),
                ('planactivationdate', models.DateTimeField(blank=True, null=True)),
                ('planexpirydate', models.DateTimeField(blank=True, null=True)),
                ('isactivesubscription', models.BooleanField(blank=True, null=True)),
                ('planid', models.ForeignKey(blank=True, db_column='planid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.subscriptionplans')),
                ('subscribeduserid', models.ForeignKey(blank=True, db_column='subscribeduserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Shortdescription',
            fields=[
                ('shortdescriptionid', models.AutoField(primary_key=True, serialize=False)),
                ('shortdestext', models.TextField()),
                ('categoryid', models.ForeignKey(db_column='categoryid', on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.categories')),
            ],
        ),
        migrations.CreateModel(
            name='Servicetabtitle',
            fields=[
                ('Servicetabtitleid', models.AutoField(primary_key=True, serialize=False)),
                ('brandtag', models.TextField(blank=True, null=True)),
                ('shouttag', models.TextField(blank=True, null=True)),
                ('greetingtag', models.TextField(blank=True, null=True)),
                ('videochattag', models.TextField(blank=True, null=True)),
                ('influenceracquasitiontag', models.TextField(blank=True, null=True)),
                ('addtime', models.DateTimeField(auto_now=True)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
            ],
        ),
        migrations.CreateModel(
            name='Seo_Settings',
            fields=[
                ('seoid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keyword', models.TextField(blank=True, null=True)),
                ('influencerid', models.OneToOneField(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='page', to='mainapp.pages')),
            ],
        ),
        migrations.CreateModel(
            name='Rmtoinfluencermappings',
            fields=[
                ('mappingid', models.AutoField(primary_key=True, serialize=False)),
                ('mappingsdate', models.DateTimeField(auto_now=True)),
                ('mappedid', models.OneToOneField(blank=True, db_column='mappedid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='mappings', to='mainapp.influencersettings', to_field='influencer_userid')),
                ('mappedtoid', models.ForeignKey(blank=True, db_column='mappedtoid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid')),
                ('mapperid', models.ForeignKey(blank=True, db_column='mapperid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rmprofile',
            fields=[
                ('profileid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('number', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('languagesknown', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('state', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('profilepic', models.ImageField(blank=True, null=True, upload_to='rmprofileimages/')),
                ('rmid', models.OneToOneField(blank=True, db_column='rmid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Refunds',
            fields=[
                ('refundid', models.AutoField(primary_key=True, serialize=False)),
                ('refundstatus', models.BooleanField(blank=True, null=True)),
                ('refunddate', models.DateTimeField(blank=True, null=True)),
                ('refundedfrom', models.BigIntegerField(blank=True, null=True)),
                ('refundedto', models.BigIntegerField(blank=True, null=True)),
                ('refundedamt', models.BigIntegerField(blank=True, null=True)),
                ('clientid', models.ForeignKey(db_column='clientid', on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.clientsettings')),
                ('invoiceid', models.ForeignKey(blank=True, db_column='invoiceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.invoices')),
                ('orderid', models.ForeignKey(db_column='orderid', on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('payments', models.ForeignKey(blank=True, db_column='payments', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.payments')),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PricingPlans',
            fields=[
                ('planid', models.AutoField(primary_key=True, serialize=False)),
                ('planprice', models.BigIntegerField()),
                ('plan_type', models.TextField(blank=True, null=True)),
                ('planperks', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('deliverytime', models.DurationField(blank=True, db_column='Deliverytime', default=datetime.timedelta(days=1), null=True)),
                ('exclusivedeliverytime', models.DurationField(blank=True, db_column='exclusivedeliverytime', default=datetime.timedelta(days=1), null=True)),
                ('exculsiveprice', models.BigIntegerField(blank=True, null=True)),
                ('priorityprice', models.BigIntegerField(blank=True, null=True)),
                ('finalamount', models.BigIntegerField(blank=True, null=True)),
                ('revisiontimes', models.IntegerField(blank=True, null=True)),
                ('marginpercentage', models.FloatField(blank=True, default=10.0, null=True)),
                ('increasedprice', models.BigIntegerField(blank=True, null=True)),
                ('margin_amt', models.BigIntegerField(blank=True, null=True)),
                ('serviceid', models.ForeignKey(blank=True, db_column='serviceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.services')),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='plan_margin', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformProfileLink',
            fields=[
                ('platformprofilelinkid', models.AutoField(primary_key=True, serialize=False)),
                ('platformtype', models.TextField(blank=True, null=True)),
                ('additiontime', models.DateTimeField(auto_now=True)),
                ('profilelink', models.TextField(blank=True, null=True)),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformDetails',
            fields=[
                ('platformdetailid', models.AutoField(primary_key=True, serialize=False)),
                ('platformtype', models.TextField(blank=True, null=True)),
                ('additiontime', models.DateTimeField(blank=True, null=True)),
                ('platformcredential', models.TextField(blank=True, null=True)),
                ('isapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('approvedby', models.IntegerField(blank=True, null=True)),
                ('approvaldate', models.DateTimeField(blank=True, null=True)),
                ('subscribers_followers', models.BigIntegerField(blank=True, null=True)),
                ('allviews', models.BigIntegerField(blank=True, null=True)),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PitchingCastingCall',
            fields=[
                ('pitchingCastingCallid', models.AutoField(primary_key=True, serialize=False)),
                ('pitchtext', models.TextField(blank=True, null=True)),
                ('workstatus', models.TextField(default='Not Completed')),
                ('approved', models.BooleanField(default=False)),
                ('pitchingfile', models.FileField(upload_to='')),
                ('date', models.DateField(auto_now=True)),
                ('castingcallid', models.ForeignKey(blank=True, db_column='castingcallid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.casting_call')),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
            ],
        ),
        migrations.AddField(
            model_name='payments',
            name='webresponseid',
            field=models.ForeignKey(blank=True, db_column='webresponseid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.webhook_response'),
        ),
        migrations.CreateModel(
            name='Ordersrequirements',
            fields=[
                ('requirementsid', models.AutoField(primary_key=True, serialize=False)),
                ('requirement', models.TextField(blank=True, null=True)),
                ('eventid', models.ForeignKey(blank=True, db_column='eventid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.events')),
                ('ordersid', models.ForeignKey(blank=True, db_column='ordersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('serviceid', models.ForeignKey(blank=True, db_column='serviceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.services')),
                ('subslotid', models.ForeignKey(blank=True, db_column='subslotid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.subslots')),
                ('templatesid', models.ForeignKey(blank=True, db_column='templatesid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.templates')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='orderstatus',
            field=models.ForeignKey(blank=True, db_column='orderstatus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orderstatus'),
        ),
        migrations.AddField(
            model_name='orders',
            name='planid',
            field=models.ForeignKey(blank=True, db_column='planid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.pricingplans'),
        ),
        migrations.AddField(
            model_name='orders',
            name='serviceid',
            field=models.ForeignKey(blank=True, db_column='serviceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.services'),
        ),
        migrations.AddField(
            model_name='orders',
            name='subslotid',
            field=models.ForeignKey(blank=True, db_column='subslotid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.subslots'),
        ),
        migrations.CreateModel(
            name='OrderChat',
            fields=[
                ('orderchatid', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('userid', models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ordercancelreasons',
            fields=[
                ('reasonid', models.AutoField(primary_key=True, serialize=False)),
                ('cancellationdate', models.DateTimeField(auto_now=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('orderid', models.OneToOneField(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('usersid', models.ForeignKey(blank=True, db_column='usersid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('notificationid', models.AutoField(primary_key=True, serialize=False)),
                ('notificationpurpose', models.TextField(blank=True, null=True)),
                ('notificationtime', models.DateTimeField(auto_now=True)),
                ('notificationcontent', models.TextField(blank=True, null=True)),
                ('notificationstatus', models.BooleanField(default=False, null=True)),
                ('notificationtype', models.CharField(blank=True, max_length=20, null=True)),
                ('fromuserid', models.ForeignKey(blank=True, db_column='fromuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('rmid', models.ForeignKey(blank=True, db_column='rmid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid')),
                ('touserid', models.ForeignKey(blank=True, db_column='touserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='receiver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Kycprofile',
            fields=[
                ('profileid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('number', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('languagesknown', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, default=list, null=True, size=None)),
                ('state', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('profilepic', models.ImageField(blank=True, default='default_avtar.webp', null=True, upload_to='kycuserimages/')),
                ('kycid', models.OneToOneField(blank=True, db_column='kycid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='invoices',
            name='ordersid',
            field=models.ForeignKey(db_column='ordersid', on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders'),
        ),
        migrations.CreateModel(
            name='InfluencersReview',
            fields=[
                ('influencersreviewid', models.AutoField(primary_key=True, serialize=False)),
                ('review_message', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('isapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('approveuserid', models.ForeignKey(blank=True, db_column='approveuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='approveuserid', to=settings.AUTH_USER_MODEL)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
                ('orderid', models.OneToOneField(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
            ],
        ),
        migrations.CreateModel(
            name='Influencerhiringhistorytable',
            fields=[
                ('historyid', models.AutoField(primary_key=True, serialize=False)),
                ('producttype', models.TextField(blank=True, null=True)),
                ('productid', models.TextField(blank=True, null=True)),
                ('actions', models.TextField(blank=True, null=True)),
                ('executiondate', models.DateTimeField(blank=True, null=True)),
                ('rejectionreason', models.TextField(blank=True, null=True)),
                ('actiondate', models.DateTimeField(blank=True, null=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
            ],
        ),
        migrations.AddField(
            model_name='influenceranalytics',
            name='influencerid',
            field=models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('imageid', models.AutoField(primary_key=True, serialize=False)),
                ('imagecaption', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('imagepath', models.ImageField(upload_to='')),
                ('im_userid', models.ForeignKey(blank=True, db_column='im_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='events',
            name='eventtypeid',
            field=models.ForeignKey(blank=True, db_column='eventtypeid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.eventtype'),
        ),
        migrations.AddField(
            model_name='events',
            name='influencerid',
            field=models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid'),
        ),
        migrations.CreateModel(
            name='EmployeeReview',
            fields=[
                ('employeereviewid', models.AutoField(primary_key=True, serialize=False)),
                ('employeename', models.TextField(blank=True, null=True)),
                ('employeedesgination', models.TextField(blank=True, null=True)),
                ('employeedepartment', models.TextField(blank=True, null=True)),
                ('employeemessage', models.TextField(blank=True, null=True)),
                ('employeeimage', models.ImageField(upload_to='')),
                ('creationdate', models.DateTimeField(auto_now=True, null=True)),
                ('userid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Couponcodes',
            fields=[
                ('couponcodesid', models.AutoField(primary_key=True, serialize=False)),
                ('couponname', models.TextField(blank=True, null=True)),
                ('coupondesc', models.TextField(blank=True, null=True)),
                ('coupondiscount', models.IntegerField(blank=True, default=1, null=True)),
                ('couponterms', models.TextField(blank=True, null=True, unique=True)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('totalcodeused', models.IntegerField(blank=True, null=True)),
                ('codeusedlimit', models.IntegerField(blank=True, null=True)),
                ('activestatus', models.BooleanField(blank=True, null=True)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
                ('serviceid', models.ForeignKey(blank=True, db_column='serviceid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.services')),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('date', models.DateTimeField(auto_created=True)),
                ('client_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.TextField(blank=True, default='India', null=True)),
                ('profileimage', models.FileField(blank=True, default='default_avtar.webp', null=True, upload_to='Profileimages/')),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, default='INR', null=True)),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=15, null=True)),
                ('client_userid', models.OneToOneField(blank=True, db_column='client_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('rmid', models.ForeignKey(db_column='rmid', default=103856, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid')),
            ],
        ),
        migrations.CreateModel(
            name='CastingCallSeoPage',
            fields=[
                ('castingcallseopageid', models.AutoField(primary_key=True, serialize=False)),
                ('h1title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('castingcallcategorieid', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.castingcallcategories')),
            ],
        ),
        migrations.AddField(
            model_name='casting_call',
            name='approvedby',
            field=models.ForeignKey(blank=True, db_column='approvedby', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid'),
        ),
        migrations.AddField(
            model_name='casting_call',
            name='categoryid',
            field=models.ForeignKey(blank=True, db_column='categoryid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.castingcallcategories'),
        ),
        migrations.AddField(
            model_name='casting_call',
            name='clientid',
            field=models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('Cartid', models.AutoField(primary_key=True, serialize=False)),
                ('addtime', models.DateTimeField(auto_now=True)),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('influencerid', models.ForeignKey(blank=True, db_column='influencerid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.influencersettings', to_field='influencer_userid')),
            ],
        ),
        migrations.CreateModel(
            name='Callcastingreasons',
            fields=[
                ('reasonid', models.AutoField(primary_key=True, serialize=False)),
                ('cancellationdate', models.DateTimeField(auto_now=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('callcastid', models.OneToOneField(blank=True, db_column='callcastid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.casting_call')),
                ('cancelledby', models.ForeignKey(blank=True, db_column='cancelledby', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid')),
            ],
        ),
        migrations.CreateModel(
            name='Callcastingquestions',
            fields=[
                ('questionid', models.AutoField(primary_key=True, serialize=False)),
                ('additiondate', models.DateTimeField(auto_now=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('des', models.TextField(blank=True, null=True)),
                ('callcastid', models.ForeignKey(blank=True, db_column='callcastid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.casting_call')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Blogcontent',
            fields=[
                ('blogcontentid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('discription', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('alttext', models.CharField(blank=True, max_length=100, null=True)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.blog')),
            ],
        ),
        migrations.CreateModel(
            name='BlogComments',
            fields=[
                ('commentid', models.AutoField(primary_key=True, serialize=False)),
                ('Commenttext', models.TextField()),
                ('name', models.CharField(max_length=20)),
                ('totallikes', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('isapproved', models.BooleanField(blank=True, default=False, null=True)),
                ('approveuserid', models.ForeignKey(blank=True, db_column='approveuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.blog')),
            ],
        ),
        migrations.CreateModel(
            name='BiddingHistoryTable',
            fields=[
                ('historyid', models.AutoField(primary_key=True, serialize=False)),
                ('bidamt', models.BigIntegerField(blank=True, null=True)),
                ('bidstartingprice', models.BigIntegerField(blank=True, null=True)),
                ('bidtime', models.DateTimeField(blank=True, null=True)),
                ('bidderid', models.ForeignKey(blank=True, db_column='bidderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.orders')),
                ('slotid', models.ForeignKey(blank=True, db_column='slotid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.slots')),
            ],
        ),
        migrations.CreateModel(
            name='AgencySettings',
            fields=[
                ('agencysettingsid', models.AutoField(primary_key=True, serialize=False)),
                ('email_verified', models.BooleanField(blank=True, null=True)),
                ('mobile_verified', models.BooleanField(blank=True, null=True)),
                ('twofa_verified', models.BooleanField(blank=True, null=True)),
                ('kyc', models.BooleanField(blank=True, null=True)),
                ('asettingsuserid', models.OneToOneField(blank=True, db_column='asettingsuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyProfile',
            fields=[
                ('date', models.DateTimeField(auto_created=True)),
                ('agency_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.TextField(blank=True, default='India', null=True)),
                ('profileimage', models.FileField(blank=True, default='default_avtar.webp', null=True, upload_to='Profileimages/')),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('timezone', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, default='INR', null=True)),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=15, null=True)),
                ('agency_userid', models.OneToOneField(blank=True, db_column='agency_userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('rmid', models.ForeignKey(db_column='rmid', default=103856, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.rmsettings', to_field='rmid')),
            ],
        ),
        migrations.CreateModel(
            name='Accountprofile',
            fields=[
                ('acoountprofileid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('number', models.BigIntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('date', models.DateField(auto_now=True)),
                ('accountuserid', models.OneToOneField(blank=True, db_column='accountuserid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Aboutme',
            fields=[
                ('aboutmeid', models.AutoField(primary_key=True, serialize=False)),
                ('abouttext', models.TextField()),
                ('categoryid', models.ForeignKey(blank=True, db_column='categoryid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.categories')),
            ],
        ),
    ]
